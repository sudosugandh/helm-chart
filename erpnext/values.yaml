# Default values for erpnext.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

nginxImage:
  repository: git.mtrh.go.ke:5050/root/mtrhdocker/erpnext-nginx
  tag: latest
  pullPolicy: IfNotPresent
  # nginxConfig: |
  #   # custom /etc/nginx/conf.d/default.conf

pythonImage:
  repository: git.mtrh.go.ke:5050/root/mtrhdocker/erpnext-worker
  tag: latest
  pullPolicy: IfNotPresent

socketIOImage:
  repository: frappe/frappe-socketio
  tag: v13.10.0
  pullPolicy: IfNotPresent

redis:
  image:
    repository: bitnami/redis
    tag: 5.0.10-debian-10-r105
    pullPolicy: IfNotPresent
  extraEnv:
  - name: ALLOW_EMPTY_PASSWORD
    value: "yes"

# Asset Image Env Variables
frappePyPort: "8000"
socketIOPort: "9000"

# upstreamRealIPAddress: "127.0.0.1"
# upstreamRealIPRecursive: "off"
# upstreamRealIPHeader: "X-Forwarded-For"

# Python Image Env Variables
# mariadbHost: "mariadb.mariadb.svc.cluster.local"
mariadbPort: "3306"

redisQueueHost: ""
redisCacheHost: ""
redisSocketIOHost: ""

# PostgreSQL related variables
postgresHost: ""
postgresPort: ""

# Create secrets
# dbRootPassword: admin

# Create first site
createSite:
  enabled: false
  siteName: "erp.cluster.local"
  dbRootUser: "root"
  adminPassword: "admin"
  installApps: "erpnext"
  dropSiteOnUninstall: false

# Ingress
ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
  - host: erp.cluster.local
    paths:
    - path: /
      pathType: ImplementationSpecific
  tls: []
  #  - secretName: auth-server-tls
  #    hosts:
  #      - auth-server.local

migrateJob:
  # Set this to true to run migrate as part of helm install/upgrade
  enable: false
  backup: true

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true

podSecurityContext:
  supplementalGroups: [1000]

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80

# Additional Services
socketIOService:
  type: ClusterIP
  port: 9000

redisSocketIOService:
  type: ClusterIP
  port: 11000

redisQueueService:
  type: ClusterIP
  port: 12000

redisCacheService:
  type: ClusterIP
  port: 13000

persistence:
  worker:
    enabled: true
    # existingClaim: ""
    size: 8Gi
    # storageClass: "nfs"
  logs:
    enabled: true
    # existingClaim: ""
    size: 8Gi
    # storageClass: "nfs"

volumePermissions:
  enabled: false

resources: {}
  # If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
